// <auto-generated />
using System;
using ControleAcces.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ControleAcces.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ControleAcces.Domain.Entities.AccesExamen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EtudiantId")
                        .HasColumnType("int");

                    b.Property<int>("HoraireExamenId")
                        .HasColumnType("int");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.Property<int>("SalleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EtudiantId");

                    b.HasIndex("HoraireExamenId");

                    b.HasIndex("ModuleId");

                    b.HasIndex("SalleId");

                    b.ToTable("AccesExamens");
                });

            modelBuilder.Entity("ControleAcces.Domain.Entities.Etudiant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CarteRFID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpreinteHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdPromotion")
                        .HasColumnType("int");

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostNom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdPromotion");

                    b.ToTable("Etudiants");
                });

            modelBuilder.Entity("ControleAcces.Domain.Entities.HoraireExamen", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("HeureDebut")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("HeureFin")
                        .HasColumnType("time");

                    b.Property<int>("IdPromotion")
                        .HasColumnType("int");

                    b.Property<string>("Matiere")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModuleId")
                        .HasColumnType("int");

                    b.Property<int>("SalleId")
                        .HasColumnType("int");

                    b.Property<int?>("SessionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ModuleId");

                    b.HasIndex("SalleId");

                    b.HasIndex("SessionId");

                    b.ToTable("HoraireExamens");
                });

            modelBuilder.Entity("ControleAcces.Domain.Entities.Identifiant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CarteCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CarteRFID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmpreinteCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpreinteDigitale")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("EtudiantId")
                        .HasColumnType("int");

                    b.Property<string>("EtudiantMatricule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Valeur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CarteRFID");

                    b.HasIndex("EmpreinteDigitale");

                    b.HasIndex("EtudiantId")
                        .IsUnique();

                    b.ToTable("Identifiants");
                });

            modelBuilder.Entity("ControleAcces.Domain.Entities.JournalPresence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccesExamenId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EtudiantId")
                        .HasColumnType("int");

                    b.Property<DateTime>("HeureEntree")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("HeureSortie")
                        .HasColumnType("datetime2");

                    b.Property<int>("HoraireExamenId")
                        .HasColumnType("int");

                    b.Property<int>("SalleId")
                        .HasColumnType("int");

                    b.Property<string>("Session")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.Property<string>("Statut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccesExamenId");

                    b.HasIndex("EtudiantId");

                    b.HasIndex("HoraireExamenId");

                    b.HasIndex("SalleId");

                    b.ToTable("JournalPresences");
                });

            modelBuilder.Entity("ControleAcces.Domain.Entities.Module", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalleAffectee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SalleId")
                        .HasColumnType("int");

                    b.Property<string>("SalleNom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Session")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("ControleAcces.Domain.Entities.Paiement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DatePaiement")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EstPaye")
                        .HasColumnType("bit");

                    b.Property<int>("EtudiantId")
                        .HasColumnType("int");

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Montant")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("EtudiantId");

                    b.ToTable("Paiements");
                });

            modelBuilder.Entity("ControleAcces.Domain.Entities.Promotion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("ControleAcces.Domain.Entities.Salle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacite")
                        .HasColumnType("int");

                    b.Property<string>("NomSalle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SessionId")
                        .HasColumnType("int");

                    b.Property<string>("SessionNom")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Salles");
                });

            modelBuilder.Entity("ControleAcces.Domain.Entities.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnneeAcademique")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFin")
                        .HasColumnType("datetime2");

                    b.Property<int?>("HoraireExamenId")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HoraireExamenId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("ControleAcces.Domain.Entities.AccesExamen", b =>
                {
                    b.HasOne("ControleAcces.Domain.Entities.Etudiant", "Etudiant")
                        .WithMany("AccesExamens")
                        .HasForeignKey("EtudiantId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ControleAcces.Domain.Entities.HoraireExamen", "HoraireExamen")
                        .WithMany("AccesExamens")
                        .HasForeignKey("HoraireExamenId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ControleAcces.Domain.Entities.Module", "Module")
                        .WithMany("AccesExamens")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ControleAcces.Domain.Entities.Salle", "Salle")
                        .WithMany("AccesExamens")
                        .HasForeignKey("SalleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Etudiant");

                    b.Navigation("HoraireExamen");

                    b.Navigation("Module");

                    b.Navigation("Salle");
                });

            modelBuilder.Entity("ControleAcces.Domain.Entities.Etudiant", b =>
                {
                    b.HasOne("ControleAcces.Domain.Entities.Promotion", "Promotion")
                        .WithMany("Etudiants")
                        .HasForeignKey("IdPromotion")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("ControleAcces.Domain.Entities.HoraireExamen", b =>
                {
                    b.HasOne("ControleAcces.Domain.Entities.Promotion", "Promotion")
                        .WithMany("HoraireExamens")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ControleAcces.Domain.Entities.Module", "Module")
                        .WithMany("HoraireExamens")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("ControleAcces.Domain.Entities.Salle", "Salle")
                        .WithMany("HoraireExamens")
                        .HasForeignKey("SalleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ControleAcces.Domain.Entities.Session", "Session")
                        .WithMany("HoraireExamens")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Module");

                    b.Navigation("Promotion");

                    b.Navigation("Salle");

                    b.Navigation("Session");
                });

            modelBuilder.Entity("ControleAcces.Domain.Entities.Identifiant", b =>
                {
                    b.HasOne("ControleAcces.Domain.Entities.Etudiant", "Etudiant")
                        .WithOne("Identifiant")
                        .HasForeignKey("ControleAcces.Domain.Entities.Identifiant", "EtudiantId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Etudiant");
                });

            modelBuilder.Entity("ControleAcces.Domain.Entities.JournalPresence", b =>
                {
                    b.HasOne("ControleAcces.Domain.Entities.AccesExamen", "AccesExamen")
                        .WithMany()
                        .HasForeignKey("AccesExamenId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ControleAcces.Domain.Entities.Etudiant", "Etudiant")
                        .WithMany("JournalPresences")
                        .HasForeignKey("EtudiantId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ControleAcces.Domain.Entities.HoraireExamen", "HoraireExamen")
                        .WithMany("JournalPresences")
                        .HasForeignKey("HoraireExamenId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("ControleAcces.Domain.Entities.Salle", "Salle")
                        .WithMany("Presences")
                        .HasForeignKey("SalleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("AccesExamen");

                    b.Navigation("Etudiant");

                    b.Navigation("HoraireExamen");

                    b.Navigation("Salle");
                });

            modelBuilder.Entity("ControleAcces.Domain.Entities.Paiement", b =>
                {
                    b.HasOne("ControleAcces.Domain.Entities.Etudiant", "Etudiant")
                        .WithMany("Paiements")
                        .HasForeignKey("EtudiantId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Etudiant");
                });

            modelBuilder.Entity("ControleAcces.Domain.Entities.Session", b =>
                {
                    b.HasOne("ControleAcces.Domain.Entities.HoraireExamen", null)
                        .WithMany("Sessions")
                        .HasForeignKey("HoraireExamenId")
                        .OnDelete(DeleteBehavior.NoAction);
                });

            modelBuilder.Entity("ControleAcces.Domain.Entities.Etudiant", b =>
                {
                    b.Navigation("AccesExamens");

                    b.Navigation("Identifiant");

                    b.Navigation("JournalPresences");

                    b.Navigation("Paiements");
                });

            modelBuilder.Entity("ControleAcces.Domain.Entities.HoraireExamen", b =>
                {
                    b.Navigation("AccesExamens");

                    b.Navigation("JournalPresences");

                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("ControleAcces.Domain.Entities.Module", b =>
                {
                    b.Navigation("AccesExamens");

                    b.Navigation("HoraireExamens");
                });

            modelBuilder.Entity("ControleAcces.Domain.Entities.Promotion", b =>
                {
                    b.Navigation("Etudiants");

                    b.Navigation("HoraireExamens");
                });

            modelBuilder.Entity("ControleAcces.Domain.Entities.Salle", b =>
                {
                    b.Navigation("AccesExamens");

                    b.Navigation("HoraireExamens");

                    b.Navigation("Presences");
                });

            modelBuilder.Entity("ControleAcces.Domain.Entities.Session", b =>
                {
                    b.Navigation("HoraireExamens");
                });
#pragma warning restore 612, 618
        }
    }
}
