@page "/rapport-presence"
@using ControleAcces.Application.DTOs
@using ControleAcces.Application.UseCases
@using ControleAcces.Domain.Entities
@inject GenererRapportPresenceUseCase RapportUseCase

<h3>Rapport de Présence</h3>

<div class="card p-3 mb-3">
    <div class="form-group">
        <label>Filtrer par Session :</label>
        <select @bind="sessionId" class="form-control">
            <option value="">-- Toutes les Sessions --</option>
            @foreach (var session in sessions)
            {
                <option value="@session.Id">@session.Nom</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label>Date :</label>
        <input type="date" @bind="dateFiltre" class="form-control" />
    </div>
    <div class="form-group">
        <label>Filtrer par Salle :</label>
        <select @bind="salleId" class="form-control">
            <option value="">-- Toutes les Salles --</option>
            @foreach (var salle in salles)
            {
                <option value="@salle.Id">@salle.NomSalle</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label>Matricule Étudiant :</label>
        <input @bind="matriculeEtudiant" class="form-control" />
    </div>
    <button @onclick="ChargerRapport" class="btn btn-primary mt-2">Générer Rapport</button>
</div>

<table class="table">
    <thead>
        <tr>
            <th>Date</th>
            <th>Heure Entrée</th>
            <th>Heure Sortie</th>
            <th>Étudiant</th>
            <th>Salle</th>
            <th>Session</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var presence in rapport)
        {
            <tr>
                <td>@presence.Date.ToShortDateString()</td>
                <td>@presence.HeureEntree</td>
                <td>@presence.HeureSortie</td>
                <td>@presence.EtudiantNom</td>
                <td>@presence.SalleNom</td>
                <td>@presence.SessionNom</td>
            </tr>
        }
    </tbody>
</table>

@code {
    private string sessionId;
    private string salleId;
    private string matriculeEtudiant;
    private DateTime dateFiltre = DateTime.Today;
    private List<Session> sessions = new();
    private List<SalleDTO> salles = new();
    private List<JournalPresenceDTO> rapport = new();

    protected override async Task OnInitializedAsync()
    {
        sessions = await RapportUseCase.GetAllSessionsAsync();
        salles = await RapportUseCase.GetAllSallesAsync();
    }

    private async Task ChargerRapport()
    {
        rapport = await RapportUseCase.GenererRapportAsync(sessionId, salleId, matriculeEtudiant, dateFiltre);
    }
}
